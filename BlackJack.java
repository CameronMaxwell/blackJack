/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BlackJack;

/**
 *
 * @author student
 */
public class BlackJack extends javax.swing.JFrame {

    public int DealerTotal=0;
    public int playertotal=0;
    public int dealertotal;
    public boolean dealerfirstturn = true;
    

    /**
     * Creates new form BlackJack
     */
    public BlackJack() {
        initComponents();

        // Sets wager input box to invisible at start    
        WagerInput.setVisible(false);
        // Sets Player Hold Button to invisible at start    
        PlayerHoldButton.setVisible(false);
        // Sets Hit Me Button to invisible at start  
        HitMeButton.setVisible(false);
        // Disables player hold button at start
        PlayerHoldButton.setEnabled(false);
        // Disables player hit me button at start
        HitMeButton.setEnabled(false);
        // Makes dealer button disabled and invisible during player's turn
        DealerTurnButton.setVisible(false);
        DealerTurnButton.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        DealCardsButton = new javax.swing.JButton();
        PlayerCardsLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PlayerCardsArea = new javax.swing.JTextArea();
        DealerCardsLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DealerCardsArea = new javax.swing.JTextArea();
        WagerButton = new javax.swing.JButton();
        WagerPrompt = new javax.swing.JLabel();
        WagerInput = new javax.swing.JTextField();
        WagerOutput = new javax.swing.JLabel();
        PlayerOutput = new javax.swing.JLabel();
        PlayerHoldButton = new javax.swing.JButton();
        DealerTurnButton = new javax.swing.JButton();
        HitMeButton = new javax.swing.JButton();
        DealerOutput = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 204, 0));

        jLabel1.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("21 BLACK JACK");

        DealCardsButton.setBackground(new java.awt.Color(204, 0, 0));
        DealCardsButton.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        DealCardsButton.setText("DEAL CARDS");
        DealCardsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DealCardsButtonActionPerformed(evt);
            }
        });

        PlayerCardsLabel.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        PlayerCardsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PlayerCardsLabel.setText("Your Cards:");

        PlayerCardsArea.setColumns(20);
        PlayerCardsArea.setRows(5);
        jScrollPane1.setViewportView(PlayerCardsArea);

        DealerCardsLabel.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        DealerCardsLabel.setText("Dealer Cards:");

        DealerCardsArea.setColumns(20);
        DealerCardsArea.setRows(5);
        jScrollPane2.setViewportView(DealerCardsArea);

        WagerButton.setBackground(new java.awt.Color(204, 0, 0));
        WagerButton.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        WagerButton.setText("WAGER");
        WagerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WagerButtonActionPerformed(evt);
            }
        });

        WagerInput.setEnabled(false);
        WagerInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WagerInputActionPerformed(evt);
            }
        });

        PlayerOutput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PlayerOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        PlayerHoldButton.setBackground(new java.awt.Color(204, 0, 0));
        PlayerHoldButton.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        PlayerHoldButton.setText("HOLD");
        PlayerHoldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayerHoldButtonActionPerformed(evt);
            }
        });

        DealerTurnButton.setBackground(new java.awt.Color(204, 0, 0));
        DealerTurnButton.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        DealerTurnButton.setText("DEALER'S TURN");
        DealerTurnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DealerTurnButtonActionPerformed(evt);
            }
        });

        HitMeButton.setBackground(new java.awt.Color(204, 0, 0));
        HitMeButton.setFont(new java.awt.Font("MV Boli", 0, 14)); // NOI18N
        HitMeButton.setText("HIT ME!");
        HitMeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HitMeButtonActionPerformed(evt);
            }
        });

        DealerOutput.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DealerOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(WagerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WagerPrompt, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WagerInput, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(WagerOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(HitMeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(PlayerHoldButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(PlayerCardsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(PlayerOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jScrollPane1)))
                                    .addComponent(DealCardsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(46, 46, 46)
                                .addComponent(DealerCardsLabel)
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2)
                                    .addComponent(DealerTurnButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DealerOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(WagerInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(WagerOutput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(WagerPrompt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(WagerButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))))
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PlayerCardsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PlayerOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                            .addComponent(DealerOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DealerTurnButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(PlayerHoldButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(HitMeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addComponent(DealCardsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(DealerCardsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DealCardsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DealCardsButtonActionPerformed
        // TODO add your handling code here:
        // Deals 2 cards at start for player
        {
        int PlayerCards1 = (int) ((Math.random() * 10) + 2);
        int PlayerCards2 = (int) ((Math.random() * 10) + 2);
           playertotal = PlayerCards1 + PlayerCards2;
           PlayerCardsArea.append("You drew "+PlayerCards1+ " and " +PlayerCards2+ ". Your total is "+playertotal+"\n" ); 
       
        // Disables and makes the Deal cards button disappear
           DealCardsButton.setVisible(false);
           DealCardsButton.setEnabled(false);
        
        // Makes the player hold button visible after cards have been dealt  
           PlayerHoldButton.setVisible(true);
        
        // Makes the player hit me button visible after cards have been dealt
           HitMeButton.setVisible(true);
           
        // Enables hit me and hold button after cards have been dealt
           HitMeButton.setEnabled(true);
           PlayerHoldButton.setEnabled(true);
        // if player busts, dealer wins  
           if (playertotal>21) {
               DealerOutput.setText("DEALER WINS!"); 
               DealerTurnButton.setVisible(false);
               DealerTurnButton.setEnabled(false);
           }
        }
    }//GEN-LAST:event_DealCardsButtonActionPerformed

    private void WagerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WagerButtonActionPerformed
        // TODO add your handling code here:
        // When button is pressed, the user will be asked how much they want to wager
        // After the wagered amount is entered, program will say how much they've wagered
        String outputLine = ("How much would you like to wager?");
        WagerPrompt.setText(outputLine);
        // Wager input box is enabled for user to enter wager amount
        WagerInput.setEnabled(true);
        // Wager input box is shown when wager button is pressed
        WagerInput.setVisible(true);
    }//GEN-LAST:event_WagerButtonActionPerformed

    private void WagerInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WagerInputActionPerformed
        // TODO add your handling code here:
        // displays amount of money that the user wagered 
        int WagerAmount = Integer.parseInt(WagerInput.getText());
        String outputLine = ("You wagered " + WagerAmount + " dollars.");
        WagerOutput.setText(outputLine);
    }//GEN-LAST:event_WagerInputActionPerformed

    private void PlayerHoldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayerHoldButtonActionPerformed
        // TODO add your handling code here:
        // When the player holds, it will stop adding cards and it will be the dealers turn
        String outputLine = ("HOLD!");
        PlayerOutput.setText(outputLine);
        // Makes the player hold button invisible and deactivates it as their turn is done
        PlayerHoldButton.setVisible(false);
        PlayerHoldButton.setEnabled(false);
        // Makes the player hit me button invisible and deactivates it as their turn is done
        HitMeButton.setEnabled(false);
        HitMeButton.setVisible(false);
        // Makes dealer button enabled and visible after player's turn
        DealerTurnButton.setVisible(true);
        DealerTurnButton.setEnabled(true);
    }//GEN-LAST:event_PlayerHoldButtonActionPerformed

    private void DealerTurnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DealerTurnButtonActionPerformed
        // TODO add your handling code here:
        //  Gives dealer 2 cards at start of turn
        if (dealerfirstturn == true) {
        int DealerCards1 = (int) ((Math.random() * 10) + 2);
            int DealerCards2 = (int) ((Math.random() * 10) + 2);
            DealerTotal = DealerCards1 + DealerCards2;
            DealerCardsArea.append("Dealer drew "+DealerCards1+ " and " +DealerCards2+ ". It's total is "+DealerTotal+"\n" );
        // While loop makes the dealer keep adding cards while it's total is less than the player's total
        while (DealerTotal<playertotal){
        int DealerCards = (int) ((Math.random() * 10) + 2);
            DealerTotal = (DealerTotal + DealerCards);
            DealerCardsArea.append("Dealer drew " +DealerCards+ ". It's new total is " +DealerTotal+ "\n");
        }
        // if statements are the conditions for who wins the game 
        if (DealerTotal >= playertotal) {
            DealerOutput.setText("DEALER WINS!"); 
            PlayerOutput.setText("");
            DealerTurnButton.setVisible(false);
            DealerTurnButton.setEnabled(false);
         }
        if (DealerTotal>21) {
            PlayerOutput.setText("PLAYER WINS!");
            DealerOutput.setText("BUST!");
            DealerTurnButton.setVisible(false);
            DealerTurnButton.setEnabled(false);
        }
        } 
        
        
        dealerfirstturn = false;
    }//GEN-LAST:event_DealerTurnButtonActionPerformed

    private void HitMeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HitMeButtonActionPerformed
        // TODO add your handling code here:
        // This button gives player an extra card to their deck 
        {
        int PlayerCards = (int) ((Math.random() * 10) + 2);
            playertotal = (playertotal + PlayerCards);
            PlayerCardsArea.append("You drew " +PlayerCards+ ". Your new total is " +playertotal+ "\n");
        }  
        // When the player goes over 21, it will say bust and it will be the dealers turn 
        if (playertotal > 21) {
            String outputLine = ("BUST!");
            PlayerOutput.setText(outputLine);
            HitMeButton.setVisible(false);
            PlayerHoldButton.setVisible(false);
            HitMeButton.setEnabled(false);
            PlayerHoldButton.setEnabled(false);
        // Makes dealer button enabled and visible after player's turn
            DealerTurnButton.setVisible(true);
            DealerTurnButton.setEnabled(true);
            
        // if player busts, dealer wins
        if (playertotal>21) {
            DealerOutput.setText("DEALER WINS!"); 
            DealerTurnButton.setVisible(false);
            DealerTurnButton.setEnabled(false);
            
        }
        }
    }//GEN-LAST:event_HitMeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlackJack().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DealCardsButton;
    private javax.swing.JTextArea DealerCardsArea;
    private javax.swing.JLabel DealerCardsLabel;
    private javax.swing.JLabel DealerOutput;
    private javax.swing.JButton DealerTurnButton;
    private javax.swing.JButton HitMeButton;
    private javax.swing.JTextArea PlayerCardsArea;
    private javax.swing.JLabel PlayerCardsLabel;
    private javax.swing.JButton PlayerHoldButton;
    private javax.swing.JLabel PlayerOutput;
    private javax.swing.JButton WagerButton;
    private javax.swing.JTextField WagerInput;
    private javax.swing.JLabel WagerOutput;
    private javax.swing.JLabel WagerPrompt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
